{
  "name": "lenses",
  "version": "0.0.4",
  "description": "Kmett style lenses in js.",
  "main": "index.js",
  "scripts": {
    "test": "mocha test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/DrBoolean/lenses.git"
  },
  "keywords": [
    "functional",
    "fantasy",
    "lens"
  ],
  "author": {
    "name": "Loop/Recur"
  },
  "license": "MIT",
  "dependencies": {
    "pointfree-fantasy": "*",
    "lodash.curry": "*"
  },
  "devDependencies": {
    "mocha": "~1.9.0",
    "claire": "~0.4.1"
  },
  "bugs": {
    "url": "https://github.com/DrBoolean/lenses/issues"
  },
  "readme": "lenses.js\n=========\n\nFunctional lenses that compose and stuff\n\n\n```js\nrequire('./src/lenses').expose(global);\nvar compose = require('./src/lib/pointfree').compose;\n\n// setup an easy test fn\nvar toUpperCase = function(x) { return x.toUpperCase(); };\n\n// here's the data structure\nvar user = {name: \"Bob\", addresses: [{street: '99 Maple', zip: 94004, type: 'home'}, {street: '2302 Powell', zip: 94001, type: 'work'}]}\n\n// make some lenses\nvar L = makeLenses(['name', 'addresses', 'street']);\n\n// compose the lenses\nvar secondAddressesStreet = compose(L.addresses, _2, L.street)\n\n// mess with the user\nover(secondAddressesStreet, toUpperCase, user) // { name: 'Bob', addresses: [ { street: '99 Maple', zip: 94004, type: 'home' }, { street: '2302 POWELL', zip: 94001, type: 'work' } ] }\n\nview(L.name, user) // 'Bob'\n\nset(L.name, 'Kelly', user) // {name: \"Kelly\", addresses: [{street: '99 Maple', zip: 94004, type: 'home'}, {street: '2302 Powell', zip: 94001, type: 'work'}]}\n```\n",
  "readmeFilename": "README.md",
  "_id": "lenses@0.0.4",
  "_from": "lenses@"
}

var Constructor = require('../util').Constructor;

var Sum = Constructor(function(val) {
	this.val = val;
});

var getSum = function(c) { return c.val; };

Sum.prototype.map = function(f) {
	return Sum(f(this.val));
};

Sum.prototype.empty = function() { return Sum(0); };

Sum.prototype.concat = function(s2) { return Sum(this.val + s2.val); };

Sum.prototype.of = function(x) {
	return Sum(x);
};

Sum.prototype.ap = function(s2) {
	return Sum(ap(this.val, s2.val));
};

Sum.prototype.chain = function(f) {
	return f(this.val);
};

var inspect = function(x) {
  if(x==null || x==undefined) return "null";
  return x.inspect ? x.inspect() : x;
}

Sum.prototype.inspect = function(f) {
	return 'Sum('+inspect(this.val)+')';
};

module.exports = {Sum: Sum, getSum: getSum}
